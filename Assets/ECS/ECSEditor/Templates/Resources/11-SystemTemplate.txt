using ME.ECS;

namespace #NAMESPACE# {

    using TState = #STATENAME#;
    #pragma warning disable
    using #PROJECTNAME#.Components; using #PROJECTNAME#.Modules; using #PROJECTNAME#.Systems; using #PROJECTNAME#.Markers;
    using Components; using Modules; using Systems; using Markers;
    #pragma warning restore
    
    #if ECS_COMPILE_IL2CPP_OPTIONS
    [Unity.IL2CPP.CompilerServices.Il2CppSetOptionAttribute(Unity.IL2CPP.CompilerServices.Option.NullChecks, false),
     Unity.IL2CPP.CompilerServices.Il2CppSetOptionAttribute(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false),
     Unity.IL2CPP.CompilerServices.Il2CppSetOptionAttribute(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
    #endif
    public class #SCRIPTNAME# : ISystem<TState>, ISystemAdvanceTick<TState>, ISystemUpdate<TState> {
        
        public IWorld<TState> world { get; set; }
        
        void ISystemBase.OnConstruct() {}
        
        void ISystemBase.OnDeconstruct() {}
        
        void ISystemAdvanceTick<TState>.AdvanceTick(in TState state, in float deltaTime) {}
        
        void ISystemUpdate<TState>.Update(in TState state, in float deltaTime) {}
        
    }
    
}