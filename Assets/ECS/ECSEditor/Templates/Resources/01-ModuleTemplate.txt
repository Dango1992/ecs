using ME.ECS;

namespace #NAMESPACE# {
    
    using TState = #STATENAME#;
    using Entities; using Components; using Modules; using Systems; using Features; using Markers;
    
    #if ECS_COMPILE_IL2CPP_OPTIONS
    [Unity.IL2CPP.CompilerServices.Il2CppSetOptionAttribute(Unity.IL2CPP.CompilerServices.Option.NullChecks, false),
     Unity.IL2CPP.CompilerServices.Il2CppSetOptionAttribute(Unity.IL2CPP.CompilerServices.Option.ArrayBoundsChecks, false),
     Unity.IL2CPP.CompilerServices.Il2CppSetOptionAttribute(Unity.IL2CPP.CompilerServices.Option.DivideByZeroChecks, false)]
    #endif
    public class #SCRIPTNAME# : IModule<TState> {
        
        public IWorld<TState> world { get; set; }
        
        void IModuleBase.OnConstruct() {}
        
        void IModuleBase.OnDeconstruct() {}
        
        void IModule<TState>.AdvanceTick(TState state, float deltaTime) {}
        
        void IModule<TState>.Update(TState state, float deltaTime) {}
        
    }
    
}
